
from tkinter import *
from tkinter import messagebox
from tkinter import Tk
from tokenize import String




        


#inserçãorotina


def inserir():
    inserirID = Tk()
    # Mensagem de boas vindas
    inserirID.title("Criando rotina..")
    titleLabel = Label(inserirID, text= "Insira o código exclusivo dessa rotina: ")
    titleLabel.grid(column=0,row=0)
    # Caixa de inserção
    boxTXT = Text(inserirID, height = 0, width=20)
    boxTXT.grid(column= 0, row = 3)
    def getTextInput():
        inserirtkID=boxTXT.get("1.0","end")
        print(inserirtkID)
    # Botão de inserção
    buttonGet = Button(inserirID, text="Salvar", command= getTextInput)
    buttonGet.grid(column =0, row = 4)
    buttonConfirm = Button(inserirID, text="Ok", command=lambda:inserirTask(inserirID))
    buttonConfirm.grid(column =0, row = 5)
    inserirID.mainloop()

def inserirTask(aba):

    aba.destroy()
    inserirTk = Tk()
    # Mensagem de boas vindas
    inserirTk.title("Criando rotina..")
    titleLabel = Label(inserirTk, text= "Escreva o nome da tarefa: ")
    titleLabel.grid(column=0,row=0)
    # Caixa de inserção
    boxTXT = Text(inserirTk, height = 0, width=20)
    boxTXT.grid(column= 0, row = 3)
    def getTextInput():
        inserirNametk=boxTXT.get("1.0","end")
        print(inserirNametk)
    # Botão de inserção
    buttonGet = Button(inserirTk, text="Salvar", command= getTextInput)
    buttonGet.grid(column =0, row = 4)
    buttonConfirm = Button(inserirTk, text="Ok", command=lambda:inserirTime(inserirTk))
    buttonConfirm.grid(column =0, row = 5)
    inserirTk.mainloop()

def inserirTime(aba):
    aba.destroy()
    inserirTm = Tk()
    # Mensagem de boas vindas
    inserirTm.title("Criando rotina..")
    titleLabel = Label(inserirTm, text= "Para qual periodo adicionar ? Manha/Tarde/Noite ?  ")
    titleLabel.grid(column=0,row=0)
    # Caixa de inserção
    boxTXT = Text(inserirTm, height = 0, width=20)
    boxTXT.grid(column= 0, row = 3)
    def getTextInput():
        inserirTimesel=boxTXT.get("1.0","end")
        print(inserirTimesel)
    # Botão de inserção
    buttonGet = Button(inserirTm, text="Salvar", command= getTextInput)
    buttonGet.grid(column =0, row = 4)
    buttonConfirm = Button(inserirTm, text="Ok", command=lambda:inserirLevel(inserirTm))
    buttonConfirm.grid(column =0, row = 5)
    inserirTm.mainloop()

def inserirLevel(aba):
    aba.destroy()
    inserirLvl = Tk()
    # Mensagem de boas vindas
    inserirLvl.title("Criando rotina..")
    titleLabel = Label(inserirLvl, text= "Qual dificuldade da tarefa ? Fácil/Difícil ?  ")
    titleLabel.grid(column=0,row=0)
    # Caixa de inserção
    boxTXT = Text(inserirLvl, height = 0, width=20)
    boxTXT.grid(column= 0, row = 3)
    def getTextInput():
        inserirLvlsel=boxTXT.get("1.0","end")
        print(inserirLvlsel)
    # Botão de inserção
    buttonGet = Button(inserirLvl, text="Salvar", command= getTextInput)
    buttonGet.grid(column =0, row = 4)
    buttonConfirm = Button(inserirLvl, text="Ok", command=lambda:inserirEND(inserirLvl))
    buttonConfirm.grid(column =0, row = 5)
    inserirLvl.mainloop()

def inserirEND(aba):
    messagebox.showinfo(title ="UPday", message = "UP-UP! A tarefa foi cadastrada com sucesso!")
    aba.destroy()

    #editar rotina

def editar():
    editarID = Tk()
    # Mensagem de boas vindas
    editarID.title("Editando Rotina...!")
    titleLabel = Label(editarID, text= "Insira o id da tarefa a ser alterada: ")
    titleLabel.grid(column=0,row=0)
    # Caixa de inserção
    boxTXT = Text(editarID, height = 0, width=20)
    boxTXT.grid(column= 0, row = 3)
    def getTextInput():
        editarTkID=boxTXT.get("1.0","end")
        print(editarTkID)
    # Botão de inserção
    buttonGet = Button(editarID, text="Salvar", command= getTextInput)
    buttonGet.grid(column =0, row = 4)
    buttonConfirm = Button(editarID, text="Ok", command=lambda:editarSHOW(editarID))
    buttonConfirm.grid(column =0, row = 5)
    editarID.mainloop()

def editarSHOW(aba):
    aba.destroy()
    variavel = "Amigo"
    editarSW = Tk()
    editarSW.title("Editando Rotina...")
    titleLabel = Label(editarSW, text= "O id foi encontrado. Seguem abaixo as informações da tarefa: ")
    titleLabel.grid(column=0,row=0)
    textLabel = Label(editarSW, text= "{}".format(variavel))
    textLabel.grid(column=0,row=2)
    buttonConfirm = Button(editarSW, text="Ok", command=lambda:editarTask(editarSW))
    buttonConfirm.grid(column =0, row = 5)
    editarSW.mainloop()

def editarTask(aba):

    aba.destroy()
    editarTk = Tk()
    # Mensagem de boas vindas
    editarTk.title("Editando Rotina...")
    titleLabel = Label(editarTk, text= "Escreva o nome da tarefa: ")
    titleLabel.grid(column=0,row=0)
    # Caixa de inserção
    boxTXT = Text(editarTk, height = 0, width=20)
    boxTXT.grid(column= 0, row = 3)
    def getTextInput():
        editarNametk=boxTXT.get("1.0","end")
        print(editarNametk)
    # Botão de inserção
    buttonGet= Button(editarTk, text="Salvar", command= getTextInput)
    buttonGet.grid(column =0, row = 4)
    buttonConfirm= Button(editarTk, text="Ok", command=lambda:editarTime(editarTk))
    buttonConfirm.grid(column =0, row = 5)
    editarTk.mainloop()

def editarTime(aba):
    aba.destroy()
    editarTm = Tk()
    # Mensagem de boas vindas
    editarTm.title("Editando Rotina...")
    titleLabel = Label(editarTm, text= "Para qual periodo adicionar ? Manha/Tarde/Noite ?  ")
    titleLabel.grid(column=0,row=0)
    # Caixa de inserção
    boxTXT = Text(editarTm, height = 0, width=20)
    boxTXT.grid(column= 0, row = 3)
    def getTextInput():
        editarTimeSel=boxTXT.get("1.0","end")
        print(editarTimeSel)
    # Botão de inserção
    buttonGet= Button(editarTm, text="Salvar", command= getTextInput)
    buttonGet.grid(column =0, row = 4)
    buttonConfirm = Button(editarTm, text="Ok", command=lambda:editarLevel(editarTm))
    buttonConfirm.grid(column =0, row = 5)
    editarTm.mainloop()

def editarLevel(aba):
    aba.destroy()
    editarLvl = Tk()
    # Mensagem de boas vindas
    editarLvl.title("Editando Rotina...")
    titleLabel = Label(editarLvl, text= "Qual dificuldade da tarefa ? Fácil/Difícil ?  ")
    titleLabel.grid(column=0,row=0)
    # Caixa de inserção
    boxTXT = Text(editarLvl, height = 0, width=20)
    boxTXT.grid(column= 0, row = 3)
    def getTextInput():
        editarLvlsel=boxTXT.get("1.0","end")
        print(editarLvlsel)
    # Botão de inserção
    buttonGet = Button(editarLvl, text="Salvar", command= getTextInput)
    buttonGet.grid(column =0, row = 4)
    buttonConfirm = Button(editarLvl, text="Ok", command=lambda:editarEND(editarLvl))
    buttonConfirm.grid(column =0, row = 5)
    editarLvl.mainloop()

def editarEND(aba):
    messagebox.showinfo(title ="UPday", message = "UP-UP! A rotina foi editada com sucesso!")
    aba.destroy()


    #buscar rotina
 
def buscar():
    buscarID = Tk()
    # Mensagem de boas vindas
    buscarID.title("Buscando rotinas..")
    titleLabel = Label(buscarID, text= "Insira o id da tarefa a ser encontrada : ")
    titleLabel.grid(column=0,row=0)
    # Caixa de inserção
    boxTXT = Text(buscarID, height = 0, width=20)
    boxTXT.grid(column= 0, row = 3)
    def getTextInput():
        buscarTkID=boxTXT.get("1.0","end")
        print(buscarTkID)
    # Botão de inserção
    buttonGet = Button(buscarID, text="Salvar", command= getTextInput)
    buttonGet.grid(column =0, row = 4)
    buttonConfirm = Button(buscarID, text="Ok", command=lambda:buscarSHOW(buscarID))
    buttonConfirm.grid(column =0, row = 5)
    buscarID.mainloop()

def buscarSHOW(aba):
    aba.destroy()
    variavel = "Amigo"
    buscarSW = Tk()
    buscarSW.title("Buscando rotinas..")
    titleLabel = Label(buscarSW, text= "a tarefa foi localizada. As informações da tarefa: ")
    titleLabel.grid(column=0,row=0)
    textLabel = Label(buscarSW, text= "{}".format(variavel))
    textLabel.grid(column=0,row=2)
    buttonConfirm = Button(buscarSW, text="Ok", command=lambda:buscarEND(buscarSW))
    buttonConfirm.grid(column =0, row = 5)
    buscarSW.mainloop()

def buscarEND(aba):
    aba.destroy()

    #visualizar rotina

def verRotina():
    variavel = "Amigo"
    RotinaSW = Tk()
    RotinaSW.title("Visualizando rotinas..")
    titleLabel= Label(RotinaSW, text= "Estoque de tarefas : ")
    titleLabel.grid(column=0,row=0)
    textLabel= Label(RotinaSW, text= "{}".format(variavel))
    textLabel.grid(column=0,row=2)
    buttonConfirm= Button(RotinaSW, text="Ok", command=lambda:verRotinaEND(RotinaSW))
    buttonConfirm.grid(column =0, row = 5)
    RotinaSW.mainloop()

def verRotinaEND(aba):
    aba.destroy()



    # upday rotina
   
def upday():
    pass



#apagar rotina
def apagar():
    apagaTask = Tk()
    # Mensagem de boas vindas
    apagaTask.title("Apagando tarefa.. ")
    titleLabel = Label(apagaTask, text= "Digite a numeração da tarefa a ser deletada : ")
    titleLabel.grid(column=0,row=0)
    boxTXT = Text(apagaTask, height = 0, width=20)
    boxTXT.grid(column= 0, row = 3)
    def getTextInput():
        apagarTkID=boxTXT.get("1.0","end")
        variavelap = "amigo"
        localizaTask = Tk()
        titleLabel = Label(localizaTask, text= "A tarefa foi localizada. As informações da tarefa: ")
        titleLabel.grid(column=0,row=0)
        textLabel = Label(localizaTask, text= "{}".format(variavelap))
        textLabel.grid(column=0,row=2)
        # Botão de inserção
        buttonConfirm = Button(localizaTask, text="Ok", command=lambda:apagarEND(apagaTask))
        buttonConfirm.grid(column =0, row = 5)
        localizaTask.mainloop
        
        print(apagarTkID)

        def apagarEND(aba):
            messagebox.showinfo(title ="UPday", message = "UP-UP! A rotina foi deletada com sucesso!")
            aba.destroy()
    buttonGet = Button(apagaTask, text="Deletar", command= getTextInput)
    buttonGet.grid(column =0, row = 4)
    
    apagaTask.mainloop()





    #encerrar sessão
class Interface():
    def __init__(self):
        pass

    def mensagem(self,tipomsg,aba,txt):
        messagebox.showinfo(title ="UPday", message = txt + "{}".format(tipomsg))
        aba.destroy()

    def boasvindas(self):
        self.welcome = Tk()
        vnum_cstexto = StringVar()
        # Mensagem de boas vindas
        self.welcome.title("Bem vindo ao UPday!")
        welcomelbl = Label(self.welcome, text= """Olá! Bem vindo(a) à UPday!
        Juntos podemos dar um 'Up' no seu dia ;)
        Primeiramente, seria ótimo te conhecer mais um pouco.
                Vamos começar?!""")
        welcomelbl.grid(column=0,row=0)
        # Caixa de inserção
        welcometab = Entry(self.welcome, textvariable=vnum_cstexto)
        welcometab.grid(column=0, row= 3)
        # Mensagem na caixa de texto
        vnum_cstexto.set("Nos diga o seu nome!")
        # Botão de inserção
        welcomebtn = Button(self.welcome, text="Mostrar mensagem", command=lambda:self.mensagem(vnum_cstexto.get(),self.welcome, "Bom te conhecer "))
        welcomebtn.grid(column =0, row = 4)
        self.welcome.mainloop()


    def mainW(self):
        self.mainW = Tk()
        # Muda a corda janela principal
        self.mainW.configure(background="lightblue")
        # Titulo da janela
        self.mainW.title("UPday")
        # Traz janela para frente 
        self.mainW.lift()
        #Label com o nome do app, cor de fundo,texto e sua fonte
        texto_inicial = Label(self.mainW, text = "UPday",bg = "lightblue",fg = "black")
        texto_inicial.configure(font=("Segoe Print", 25))
        texto_inicial.grid(column=1,row=0, padx = 100,pady = 300)

        # Botão de inserção
        insert = Button(self.mainW, text = "Nova Rotina", command= inserir)
        insert.grid(column=0,row=6, padx = 10,pady = 10)
        # Botão de edição
        edit = Button(self.mainW, text= "Editar Rotina", command= editar)
        edit.grid(column=0,row=7, padx = 10,pady = 10)
        # Botão de buscar
        search = Button(self.mainW, text= "Buscar Rotina", command=buscar)
        search.grid(column=0,row=8, padx = 10,pady = 10)
        # Botão de visualiza
        check = Button(self.mainW, text= "Ver Rotina", command=verRotina)
        check.grid(column=2,row=6, padx = 10,pady = 10)
        # Botão de upday
        Upd = Button(self.mainW, text = "UPday Rotina", command=upday)
        Upd.grid(column=2,row=7, padx = 10,pady = 10)
        # Botão de apagar
        erase = Button(self.mainW, text = "Apagar Rotina", command=apagar)
        erase.grid(column=2,row=8, padx = 10,pady = 10)

        self.mainW.mainloop()

        


a = Interface()

a.boasvindas()
a.mainW()
